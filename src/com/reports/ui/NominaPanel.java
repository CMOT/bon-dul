/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.reports.ui;

import com.reports.model.FilesLoadDTO;
import com.reports.model.RowDTO;
import java.io.File;
import java.util.ArrayList;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;

/**
 *
 * @author ASUS
 */
public class NominaPanel extends javax.swing.JPanel {

    public static int CONTADOR=0;
    int totalLines;
    ExcelReader reader;
    ExcelWriter writer;
    JFileChooser fileChooser;
    ArrayList<RowDTO> listRows;
    File[] files;
    DefaultTableModel model, modelResults;
    String areas[];
    FilesLoadDTO fileDTO;
    /**
     * Creates new form NominaPanel
     */
    public NominaPanel() {
        initComponents();
        areas= new String[]{"PRODUCCION", "ENERGIAS", "MANTENIMIENTO","MP SUPERS", "MP", "PROCESOS", "CALIDAD", "PT", "SOPLADO"};
        fileChooser = new JFileChooser();
        FileNameExtensionFilter filtroExcel=new FileNameExtensionFilter("Xlsx","xlsx");
        fileChooser.setFileFilter(filtroExcel);
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        JComboBox jcb=new JComboBox(areas);
        jcb.setSelectedIndex(0);
        TableColumn tc=  tableFiles.getColumnModel().getColumn(1);
        TableCellEditor tce= new DefaultCellEditor(jcb);
        tc.setCellEditor(tce);
        model=(DefaultTableModel) tableFiles.getModel();
        modelResults=(DefaultTableModel) tableResults.getModel();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progressBar = new javax.swing.JProgressBar();
        btnLoadFiles = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnGenerar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableResults = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableFiles = new javax.swing.JTable();

        btnLoadFiles.setText("Cargar archivos");
        btnLoadFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadFilesActionPerformed(evt);
            }
        });

        btnExport.setText("Exportar");
        btnExport.setEnabled(false);
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnGenerar.setText("Generar Consolidado");
        btnGenerar.setEnabled(false);
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        tableResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Area", "Empresa", "No. Empleado", "Nombre", "TE"
            }
        ));
        jScrollPane2.setViewportView(tableResults);

        tableFiles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Archivo", "Area", "Fecha de la semana"
            }
        ));
        jScrollPane3.setViewportView(tableFiles);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExport, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLoadFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGenerar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerar)
                    .addComponent(btnLoadFiles))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExport)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(368, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadFilesActionPerformed
        try{
            fileChooser.setMultiSelectionEnabled(true);
            int opcion=fileChooser.showOpenDialog(this);
            if(opcion==JFileChooser.APPROVE_OPTION){
                btnExport.setEnabled(false);
                progressBar.setValue(0);
                for(int i=0; i< model.getRowCount();i++){
                    model.removeRow(i);
                }
                files=null;
                files= fileChooser.getSelectedFiles();
                fileDTO= new FilesLoadDTO(files.length);
                for(int i=0; i<files.length; i++){
                    String name=files[i].getName();
                    JComboBox jcb=new JComboBox(areas);
                    jcb.setSelectedIndex(0);
                    TableCellEditor defaultCellEditor=new DefaultCellEditor(jcb);
                    tableFiles.getColumnModel().getColumn(1).setCellEditor(defaultCellEditor);
                        model.addRow(new Object[]{name, defaultCellEditor, name.substring(!name.contains("semana")?0:name.indexOf("semana"), !name.contains("2017")?0:name.indexOf("2017") )});
                }
                tableFiles.setModel(model);
                reader= new ExcelReader();
//                totalLines=reader.countTotalLines(files);
//                System.out.println("tamaÃ±o archivos "+totalLines);
//                progressBar.setMaximum(totalLines);
            }
            if(model.getRowCount()>0){
                btnGenerar.setEnabled(true);
            }else{
                btnGenerar.setEnabled(false);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error al cargar archivos: Error 1:"+e);
        }
        
    }//GEN-LAST:event_btnLoadFilesActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        try{
            fileChooser.setMultiSelectionEnabled(false);
            fileChooser.setSelectedFile(null);
            fileChooser.setSelectedFiles(null);
            
            if(reader.listRowsLiquimex.size()>0){
                JOptionPane.showMessageDialog(null, "Seleccione la ruta para el consolidado SEMANAL(LIQUIMEX)");
                int opcion=fileChooser.showSaveDialog(this);
                if(opcion==JFileChooser.APPROVE_OPTION){
                    File fileLIQUIMEX = fileChooser.getSelectedFile();
                    writer= new ExcelWriter();
                    writer.createConsolidado(fileLIQUIMEX.getAbsolutePath(), reader.listRowsLiquimex);
                    fileChooser.setSelectedFile(null);
                }
            }
            
            if(reader.listRowsOAM.size()>0){
                JOptionPane.showMessageDialog(null, "Seleccione la ruta para el consolidado QUINCENAL(OAM)");
                int opcion2=fileChooser.showSaveDialog(this);
                if(opcion2==JFileChooser.APPROVE_OPTION){
                    File fileOAM = fileChooser.getSelectedFile();
                    writer= new ExcelWriter();
                    writer.createConsolidado(fileOAM.getAbsolutePath(), reader.listRowsOAM);
                    fileChooser.setSelectedFile(null);
                }
            }
            btnGenerar.setEnabled(true);
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error al exportar: Error 6:"+e);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        try{
            reader= new ExcelReader();
            modelResults=createNewTableResultsModel();
            for(int i=0; i< modelResults.getRowCount();i++){
                    modelResults.removeRow(i);
            }
            tableResults.setModel(modelResults);
            if(files!=null){
                for(int i=0; i<files.length; i++){
                    fileDTO.getFiles()[i]=files[i];
                    fileDTO.getTypes()[i]= model.getValueAt(i, 1).toString();
                    fileDTO.getFechas()[i]=model.getValueAt(i, 2).toString();
                }
                btnLoadFiles.setEnabled(false);
//                if(tableResults.getRowCount()<1){
//                    btnGenerar.setEnabled(false);
//                }
                listRows=reader.readAllFiles(fileDTO);
                tableResults.removeAll();
                fileChooser.setSelectedFile(null);
                fileChooser.setSelectedFiles(null);
                btnExport.setEnabled(true);
                btnLoadFiles.setEnabled(true);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error al leer archivos: Error 2:"+e);
        }
    }//GEN-LAST:event_btnGenerarActionPerformed

    public DefaultTableModel createNewTableFilesModel(){
        return new DefaultTableModel(new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Archivo", "Area", "Fecha de la semana"
            });
    }
    
    public DefaultTableModel createNewTableResultsModel(){
        return new DefaultTableModel(new Object [][] {
            {null, null, null}
        },
        new String [] {
            "Area", "Empresa", "No. Empleado", "Nombre", "TE"
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnLoadFiles;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JProgressBar progressBar;
    private javax.swing.JTable tableFiles;
    public static javax.swing.JTable tableResults;
    // End of variables declaration//GEN-END:variables
}
